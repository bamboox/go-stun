name: Build and Release

on:
  push:
    tags:
      - 'v*'  # 当有新的 tag 发布时触发工作流
  workflow_dispatch: # 手动触发

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, darwin, windows]
        goarch: [amd64, arm64]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.18'  # 选择你的 Go 版本

      - name: Build
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
        run: |
          go build -o build/go-stun-${{ matrix.goos }}-${{ matrix.goarch }} main.go

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: go-stun-${{ matrix.goos }}-${{ matrix.goarch }}
          path: build/go-stun-${{ matrix.goos }}-${{ matrix.goarch }}

  release:
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          path: ./build

      - name: Set up GitHub CLI
        uses: actions/setup-node@v3
        with:
          node-version: '14'

      - name: Install GitHub CLI
        run: sudo apt install -y gh

      - name: Authenticate GitHub CLI
        run: gh auth login --with-token <<< "${{ secrets.GITHUB_TOKEN }}"

      - name: Create GitHub Release
        run: |
          TAG_NAME="${GITHUB_REF#refs/tags/}"
          gh release create "$TAG_NAME" ./build/* --title "Release $TAG_NAME" --notes "Automated release for $TAG_NAME" --clobber
