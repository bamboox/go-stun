name: Build and Release

on:
  push:
    tags:
      - 'v*'  # 当有新的 tag 发布时触发工作流
  workflow_dispatch: # 手动触发

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, darwin, windows]
        goarch: [amd64, arm64]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.18'  # 选择你的 Go 版本

      - name: Build
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
        run: |
          go build -o build/go-stun-${{ matrix.goos }}-${{ matrix.goarch }} main.go

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: myapp-${{ matrix.goos }}-${{ matrix.goarch }}
          path: build/go-stun-${{ matrix.goos }}-${{ matrix.goarch }}

  release:
    runs-on: ubuntu-latest
    needs: build
    #if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          path: ./build

      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/
          asset_name: go-stun-${{ matrix.goos }}-${{ matrix.goarch }}
          asset_content_type: application/octet-stream
